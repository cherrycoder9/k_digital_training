/*
    - 변수: 변하는 값
        - 데이터 1개 저장할 수 있는 메모리 공간이면서 이름이 존재한다 
        - 데이터를 변경할 수 있다.
        - 선언 키워드 : let

    - 상수: 변하지 않는 값
        - 데이터 1개 저장할 수 있는 메모리 공간이면서 이름 존재한다.
        - 데이터를 변경할 수 없다.
        - 선언 키워드 : const

    - 저장하는 이유
        1. 데이터를 재활용/사용 하려고 
        2. 연산 결과를 기억하기 위해서 

    - 변수 선언하는 방법 
    
*/

// 1. 변수 없이 입력값을 출력한다. 
// console.log(prompt("code master"));
// 2. 입력값을 저장하고 출력한다.
// let 입력값 = prompt("code master");
// console.log(입력값);

// - 변수 선언/만들기 [4단계]
// 1. let : 변수 선언시 사용되는 키워드(미리 만들어진 기능이 담긴 단어)
// 2. 변수명 : 저장된 데이터를 상징하는 이름 (같은 JS파일내 중복이름 불가능, 숫자로 시작 X, 띄어쓰기 불가)
// 3. = : 대입, 오른쪽에 있는 데이터를 왼쪽에 대입/저장 연산자 
// 4. 저장할 데이터 
let 데이터상자 = "code master";

// - 변수 내 데이터를 호출하는 방법 (출력 아님)
// 변수명을 쓰면 됨 
데이터상자;
// 호출된 데이터를 출력
console.log(데이터상자); // code master

// - 변수 내 데이터 값 변경
// 변수명 = 새로운 데이터
데이터상자 = 10;
console.log(데이터상자); // 10

// - 변수 내 데이터의 연산 
let 숫자상자 = 3;
데이터상자 = 10 + 숫자상자;
console.log(데이터상자); // 13

// - 변수는 선언했지만 데이터가 없는 경우 : 'undefined'
let 빈상자;
console.log(빈상자);
console.log(빈상자 + 10);
let 문자상자 = 'code master';
console.log(문자상자 + 10); // 연결 연산자처럼 사용됨 code master10

// - 상수 만들기
// 1. const
// 2. 상수명
// 3. 대입
// 4. 저장할 데이터 
const 상수상자 = '상수 master';
console.log(상수상자);

// 3. 상수내 데이터 변경 불가능
// 상수상자 = 10; // 불가능 오류 발생하면 다음코드 실행 안됨 

// 4. 연산 
const 연산변수 = 3 + 상수상자;
console.log(연산변수);
